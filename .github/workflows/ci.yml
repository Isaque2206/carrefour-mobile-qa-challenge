name: CI

on:
  push:
    branches: ["*"]
  pull_request:
  workflow_dispatch:

# Precisamos de write para publicar o Allure em Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: Build & Test (Android Emulator + Appium)
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      NODE_VERSION: "20"
      APK_URL_DEFAULT: "https://github.com/webdriverio/native-demo-app/releases/download/0.4.0/Android-NativeDemoApp-0.4.0.apk"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install deps (npm + Appium driver)
        run: |
          set -euxo pipefail
          npm ci
          # Appium CLI global para o service conseguir invocar "appium"
          npm i -g appium@next
          appium -v || true
          # driver do Android
          appium driver install uiautomator2 || true

      - name: Download APK (robusto, com verificação)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          APK_URL="${{ vars.APK_URL != '' && vars.APK_URL || env.APK_URL_DEFAULT }}"
          echo "Baixando via curl: $APK_URL"
          curl -L -H "Accept: application/octet-stream" "$APK_URL" -o app.apk || true
          BYTES=$(wc -c < app.apk || echo 0)
          if [ "$BYTES" -lt 1000000 ]; then
            echo "Arquivo pequeno ($BYTES bytes). Fallback para gh release download…"
            rm -f app.apk
            gh release download 0.4.0 -R webdriverio/native-demo-app \
              -p "Android-NativeDemoApp-0.4.0.apk" --output app.apk
          fi
          test -s app.apk
          # valida assinatura ZIP (PK)
          head -c 2 app.apk | hexdump -v -e '/1 "%02X"' | grep -qi '^504B$'
          echo "APK_PATH=$PWD/app.apk" >> $GITHUB_ENV

      - name: Run tests on Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: pixel_6
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: |
            set -euxo pipefail
            adb wait-for-device
            echo "Node: $(node -v)"
            echo "Java:"
            java -version
            # Roda WDIO diretamente (não depende de script npm)
            npx wdio run wdio.android.local.conf.js

      # artefatos SEMPRE (mesmo com falha)
      - name: Upload CI logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: ci-logs

      - name: Save Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: ignore

      - name: Build Allure site
        if: always()
        run: |
          set -euxo pipefail
          npx allure generate --clean allure-results -o allure-site || true

      - name: Save Allure site
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-site
          path: allure-site
          if-no-files-found: ignore

  deploy-pages:
    name: Deploy Allure to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download allure-site artifact (skip se não existir)
        id: dl
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: allure-site
          path: ./allure-site

      - name: Upload GitHub Pages artifact
        if: steps.dl.outcome == 'success' && hashFiles('./allure-site/**') != ''
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-site

      - name: Deploy to GitHub Pages
        if: steps.dl.outcome == 'success' && hashFiles('./allure-site/**') != ''
        uses: actions/deploy-pages@v4
