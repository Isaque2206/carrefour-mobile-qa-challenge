name: CI

on:
  push:
    branches: ["*"]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Build & Test (Android Emulator + Appium)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Temurin JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Run tests on Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: pixel_6
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: |
            set -Eeuo pipefail
            mkdir -p ci-logs

            echo "== Env versions ==" | tee ci-logs/00_env.txt
            node -v | tee -a ci-logs/00_env.txt
            java -version 2>&1 | tee -a ci-logs/00_env.txt

            echo "== npm ci ==" | tee ci-logs/01_npm-ci.log
            npm ci |& tee -a ci-logs/01_npm-ci.log

            echo "== Install appium@next (v3) global ==" | tee ci-logs/02_appium-install.log
            npm i -g appium@next |& tee -a ci-logs/02_appium-install.log
            APP_BIN="$(npm bin -g)"
            "$APP_BIN/appium" -v |& tee -a ci-logs/02_appium-install.log || true

            echo "== Install uiautomator2 driver ==" | tee ci-logs/03_driver-install.log
            if ! "$APP_BIN/appium" driver install uiautomator2 |& tee -a ci-logs/03_driver-install.log ; then
              echo "Fallback via npx appium@next" | tee -a ci-logs/03_driver-install.log
              npx --yes appium@next driver install uiautomator2 |& tee -a ci-logs/03_driver-install.log
            fi
            "$APP_BIN/appium" driver list --installed |& tee -a ci-logs/03_driver-install.log || true

            echo "== Run WDIO tests ==" | tee ci-logs/04_tests.log
            if ! npm run test:android:ci |& tee -a ci-logs/04_tests.log ; then
              echo "Collecting logcat..." | tee -a ci-logs/04_tests.log
              adb logcat -d > ci-logs/logcat.txt || true
              exit 1
            fi

            echo "== Generate Allure ==" | tee ci-logs/05_allure.log
            npm run allure:generate |& tee -a ci-logs/05_allure.log

      # artefatos SEMPRE (mesmo com falha)
      - name: Upload CI logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: ci-logs

      - name: Save Allure results
        if: always() && hashFiles('allure-results/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Save Allure site
        if: always() && hashFiles('allure-report/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: allure-site
          path: allure-report

  deploy-pages:
    name: Deploy Allure to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download allure-site artifact (skip if n√£o existir)
        id: dl
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: allure-site
          path: ./allure-site

      - name: Upload GitHub Pages artifact
        if: steps.dl.outcome == 'success' && hashFiles('./allure-site/**') != ''
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-site

      - name: Deploy to GitHub Pages
        if: steps.dl.outcome == 'success' && hashFiles('./allure-site/**') != ''
        uses: actions/deploy-pages@v4
