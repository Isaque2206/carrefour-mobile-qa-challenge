name: CI

on:
  push:
    branches: ["*"]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Build & Test (Android Emulator + Appium)
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Temurin JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      # Emulador + execução de testes (o script roda DENTRO desta action)
      - name: Run tests on Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30                 # mais leve e baixa mais rápido que 33
          target: google_apis
          arch: x86_64
          profile: Nexus 5X             # <== troquei: é um profile suportado hoje
          force-avd-creation: true      # garante recriação do AVD se algo quebrar
          emulator-boot-timeout: 1200   # dá tempo para o primeiro boot
          emulator-options: >
            -no-window -no-snapshot -noaudio -no-boot-anim
            -gpu swiftshader_indirect -accel off
          disable-animations: true
          script: |
            echo "== devices (antes) =="
            adb devices -l || true

            node -v
            java -version

            # deps do projeto
            npm ci

            # Appium 3
            npm i -g appium@next
            appium -v
            npx --yes appium@next driver install uiautomator2
            npx --yes appium@next driver list --installed

            echo "== aguardando boot =="
            adb wait-for-device
            adb shell 'while [[ $(getprop sys.boot_completed) -ne 1 ]]; do sleep 2; done; input keyevent 82'

            # seus testes (use smoke se quiser acelerar)
            npm run test:android:ci || npm run test:android:smoke

            # gerar Allure (não falhar a pipeline se não houver)
            npm run allure:generate || true


      # Coletar logs SEMPRE (mesmo se falhar acima)
      - name: Coletar logs de diagnóstico (sempre)
        if: always()
        run: |
          set -euxo pipefail
          mkdir -p debug-logs
          # Logs ADB / Emulador (se disponíveis)
          adb devices -l || true
          adb logcat -d > debug-logs/logcat.txt || true
          cp -v $HOME/.android/adb*.log debug-logs/ 2>/dev/null || true
          cp -v emulator*.log* debug-logs/ 2>/dev/null || true
          # Versões
          {
            echo "Node: $(node -v || true)"
            echo "Appium: $(appium -v || true)"
            echo "Java:"
            java -version 2>&1 || true
          } > debug-logs/versions.txt

      - name: Upload debug logs (sempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: debug-logs

      - name: Upload Allure results
        if: always() && hashFiles('allure-results/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload Allure site
        if: always() && hashFiles('allure-report/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: allure-site
          path: allure-report

  deploy-pages:
    name: Deploy Allure to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download allure-site artifact (se existir)
        id: dl
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: allure-site
          path: ./allure-site

      - name: Nada para publicar (sem Allure)
        if: steps.dl.outcome != 'success'
        run: echo "Nenhum artefato 'allure-site' encontrado. Pulando deploy."

      - name: Upload GitHub Pages artifact
        if: steps.dl.outcome == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-site

      - name: Deploy to GitHub Pages
        if: steps.dl.outcome == 'success'
        uses: actions/deploy-pages@v4
