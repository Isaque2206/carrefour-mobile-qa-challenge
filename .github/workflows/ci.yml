name: CI

on:
  push:
    branches: ["*"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    name: Build & Test (Android Emulator + Appium)
    runs-on: macos-13          # Intel (mais estável para x86_64)
    timeout-minutes: 60

    env:
      NODE_VERSION: "20"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Setup Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install deps (npm + Appium driver)
        run: |
          set -euxo pipefail
          npm ci
          npm i -g appium@next
          appium -v || true
          appium driver install uiautomator2 || true

      - name: Download APK (robusto, com verificação)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          mkdir -p ci-logs
          # tenta baixar o mais recente pelo GH CLI (pattern Android)
          tmpdir="$(mktemp -d)"
          if ! gh release download --repo webdriverio/native-demo-app --latest \
               -D "$tmpdir" -p '*[Aa]ndroid*apk'; then
            echo "Latest não encontrado, tentando tags conhecidas…"
            gh release download v1.0.8 --repo webdriverio/native-demo-app \
               -D "$tmpdir" -p '*[Aa]ndroid*apk' || \
            gh release download v0.4.0 --repo webdriverio/native-demo-app \
               -D "$tmpdir" -p 'Android-NativeDemoApp-0.4.0.apk'
          fi
          APK_FILE="$(find "$tmpdir" -name '*.apk' | head -n1)"
          test -n "$APK_FILE"
          mv "$APK_FILE" app.apk
          # valida assinatura ZIP (PK)
          head -c 2 app.apk | hexdump -v -e '/1 "%02X"' | grep -qi '^504B$'
          echo "APK_PATH=$PWD/app.apk" >> $GITHUB_ENV

      - name: Run tests on Android emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30                # estável no Intel
          target: google_apis
          arch: x86_64                 # arquitetura Intel
          profile: Nexus 5X
          force-avd-creation: true
          emulator-boot-timeout: 1200
          disable-animations: true
          emulator-options: -no-window -no-snapshot -no-boot-anim -gpu swiftshader_indirect -camera-back none -camera-front none
          script: |
            set -euxo pipefail
            # mostra o que o ADB enxerga antes/depois do boot
            adb devices
            adb wait-for-device
            adb shell getprop ro.build.version.release || true
            # inicia Appium e espera a porta
            npx appium --base-path / --log-level warn > ci-logs/appium.log 2>&1 &
            for i in {1..120}; do (nc -z 127.0.0.1 4723 && break) || sleep 1; done
            # roda WDIO (usa APK_PATH exportado no passo anterior)
            npx wdio run wdio.android.local.conf.js

      - name: Upload CI logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: ci-logs

      - name: Save Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: ignore

      - name: Build Allure site
        if: always()
        run: |
          set -euxo pipefail
          npx allure generate --clean allure-results -o allure-site || true

      - name: Save Allure site
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-site
          path: allure-site
          if-no-files-found: ignore

  deploy-pages:
    name: Deploy Allure to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && vars.PUBLISH_PAGES == 'true' }}  # habilite criando a variável no repo

    steps:
      - name: Download allure-site artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-site
          path: ./allure-site

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
